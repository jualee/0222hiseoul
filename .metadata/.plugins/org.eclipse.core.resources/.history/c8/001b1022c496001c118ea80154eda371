package com.hiseoul.ml.service;

import java.util.List;
import java.util.Optional;

import org.apache.logging.log4j.LogManager;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.hiseoul.ml.enumpkg.ServiceResult;
import com.hiseoul.ml.model.ErrorResponse;
import com.hiseoul.ml.model.MenuCate;
import com.hiseoul.ml.model.Result;
import com.hiseoul.ml.repositories.MenuCateRepository;

@Service
public class MenuCateServiceImpl implements MenuCateService{
	private static final org.apache.logging.log4j.Logger 
Logger=LogManager.getLogger(MenuCateServiceImpl.class);
	
	@Autowired
	MenuCateRepository repository;
	
	public Result updateMenuCate(MenuCate menucate) {
		Optional<MenuCate> search = repository.findById(menucate.getCate_no());
		Result result = new Result();
		
		if(search.isPresent()) {
			menucate = repository.save(menucate);
			result.setPayload(menucate);
		}else {
			result.setEror(new ErrorResponse(ServiceResult.NOTEEXIST.toString()));
		}
		return result;
		
	}
	
	public Result deleteMenuCate(Integer cate_no) {
		Result result = new Result();
		boolean isPresent = repository.findById(cate_no).isPresent();

		
		if(!isPresent) {
			result.setEror(new ErrorResponse(ServiceResult.NOTEEXIST.toString()));
			
		}else {
			repository.deleteById(cate_no);
		}
		return result;	
	}
	
	@Override
	public Result createMenuCate(MenuCate menuCate) {
			menuCate = repository.save(menuCate);
			Result result = new Result();
			result.setPayload(menuCate);
			return result;
	}
	
	@Override
	public Result retrieveMenuCateList() {
			List<MenuCate> list= repository.findAllBycate_noDesc();
			Result result = new Result();
			result.setPayload(list);
			return result;

	}
	
	@Override
	public Result retrieveMenuCate(Integer cate_no) {
			Optional<MenuCate> optionalMenuCate= repository.findById(cate_no);
			Result result = new Result();
			
			if(optionalMenuCate.isPresent()) {
				result.setEror(new ErrorResponse(ServiceResult.NOTEEXIST.toString()));
			}
			return result;
	}

}